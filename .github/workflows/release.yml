name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: refresh apt repo
      run: sudo apt-get update
    - name: install auto...
      run: sudo apt-get install autoconf automake libtool libsndfile-dev -y
    - name: configure
      run: autoreconf -i && ./configure
    - name: build
      run: make
    - name: verify
      run: file src/.libs/libfvad.so.0.0.0
    - name: publish artifact
      uses: actions/upload-artifact@v1
      with:
        name: ubuntu
        path: src/.libs/libfvad.so.0.0.0

  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: install auto...
      run: brew install autoconf automake libtool libsndfile pkg-config
    - name: configure
      run: autoreconf -i && ./configure
    - name: build
      run: make
    - name: verify
      run: file src/.libs/libfvad.0.dylib
    - name: publish artifact
      uses: actions/upload-artifact@v1
      with:
        name: mac
        path: src/.libs/libfvad.0.dylib

  build-windows-32bit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: refresh apt repo
      run: sudo apt-get update
    - name: install auto...
      run: sudo apt-get install autoconf automake libtool libsndfile-dev mingw-w64 -y
    - name: configure
      run: autoreconf -i && ./configure --host=i686-w64-mingw32
    - name: build
      run: make
    - name: verify
      run: file src/.libs/libfvad-0.dll
    - name: publish artifact
      uses: actions/upload-artifact@v1
      with:
        name: win32
        path: src/.libs/libfvad-0.dll

  build-windows-64bit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: refresh apt repo
      run: sudo apt-get update
    - name: install auto...
      run: sudo apt-get install autoconf automake libtool libsndfile-dev mingw-w64 -y
    - name: configure
      run: autoreconf -i && ./configure --host=x86_64-w64-mingw32
    - name: build
      run: make
    - name: verify
      run: file src/.libs/libfvad-0.dll
    - name: publish artifact
      uses: actions/upload-artifact@v1
      with:
        name: win64
        path: src/.libs/libfvad-0.dll

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows-32bit, build-windows-64bit]
    steps:
      - name: Download ubuntu artifact
        uses: actions/download-artifact@v1
        with:
          name: ubuntu
      - name: Download mac artifact
        uses: actions/download-artifact@v1
        with:
          name: mac
      - name: Download win32 artifact
        uses: actions/download-artifact@v1
        with:
          name: win32
      - name: Download win64 artifact
        uses: actions/download-artifact@v1
        with:
          name: win64
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/libfvad.so.0.0.0
          asset_name: libfvad.so
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mac/libfvad.0.dylib
          asset_name: libfvad.dylib
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Win32
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: win32/libfvad-0.dll
          asset_name: x86_libfvad.dll
          asset_content_type: application/octet-stream
      - name: Upload Release Asset Win64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: win64/libfvad-0.dll
          asset_name: x64_libfvad.dll
          asset_content_type: application/octet-stream
